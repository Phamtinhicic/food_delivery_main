@startuml Food_Delivery_Component_Diagram
!theme plain

title Food Delivery System - Component Diagram (Simplified)

skinparam componentStyle rectangle
skinparam component {
    BackgroundColor LightBlue
    BorderColor Black
    FontSize 13
    FontStyle bold
}

skinparam database {
    BackgroundColor LightYellow
    BorderColor Black
}

skinparam cloud {
    BackgroundColor LightGreen
    BorderColor Black
}

skinparam rectangle {
    BackgroundColor WhiteSmoke
    BorderColor Black
}

' ============================================
' ACTORS (Người dùng)
' ============================================
actor "👤 Customer" as customer
actor "👨‍💼 Admin" as admin
actor "👨‍🍳 Restaurant\nStaff" as staff

' ============================================
' LAYER 1: PRESENTATION (Giao diện)
' ============================================
rectangle "PRESENTATION LAYER\n(Port 5174, 5175, 5176)" as presentation_layer {
    [Customer UI\nReact + Vite\nPort: 5174] as frontend
    [Admin UI\nReact + Vite\nPort: 5175] as admin_ui
    [Restaurant UI\nReact + Vite\nPort: 5176] as restaurant_ui
}

' ============================================
' LAYER 2: BUSINESS LOGIC (Backend)
' ============================================
rectangle "BUSINESS LOGIC LAYER\n(Port 4000)" as business_layer {
    [API Gateway\nExpress.js + JWT] as gateway
    
    [Food Service\n- Add/Edit/Delete\n- List/Filter] as food_service
    [Order Service\n- Create Order\n- Track Status] as order_service
    [User Service\n- Register/Login\n- Profile] as user_service
    [Payment Service\n- Stripe Integration] as payment_service
}

' ============================================
' LAYER 3: DATA (Database & Storage)
' ============================================
rectangle "DATA LAYER" as data_layer {
    database "MongoDB\nPort: 27017\n\n- users\n- foods\n- orders" as mongodb
    [File Storage\nuploads/images/] as storage
}

' ============================================
' EXTERNAL SERVICES
' ============================================
cloud "Stripe\nPayment Gateway" as stripe

' ============================================
' RELATIONSHIPS: Actors → Presentation
' ============================================
customer --> frontend : Browse & Order
admin --> admin_ui : Manage System
staff --> restaurant_ui : Process Orders

' ============================================
' RELATIONSHIPS: Presentation → Business
' ============================================
frontend --> gateway : HTTP REST
admin_ui --> gateway : HTTP REST
restaurant_ui --> gateway : HTTP REST

' ============================================
' RELATIONSHIPS: Business → Services
' ============================================
gateway --> food_service
gateway --> order_service
gateway --> user_service
gateway --> payment_service

' ============================================
' RELATIONSHIPS: Services → Data
' ============================================
food_service --> mongodb
order_service --> mongodb
user_service --> mongodb

gateway --> storage : Upload Images

' ============================================
' RELATIONSHIPS: External
' ============================================
payment_service --> stripe : Process Payment
frontend <.. stripe : Callback
frontend --> storage : Load Images

' ============================================
' NOTES
' ============================================
note right of frontend
  **Customer Features:**
  - Browse menu
  - Add to cart
  - Place order
  - Track delivery
  - Stripe payment
  
  **Tech:** React 18, Vite, Axios
end note

note right of admin_ui
  **Admin Features:**
  - Dashboard stats
  - Add/Edit/Delete food
  - Manage orders
  - Manage users
  
  **Tech:** React 18, Vite
end note

note right of restaurant_ui
  **Restaurant Features:**
  - View orders (Kanban)
  - View menu (read-only)
  - Filter by category
  
  **Tech:** React 18, Vite
end note

note bottom of gateway
  **API Gateway**
  Port: 4000
  
  **Middleware:**
  - JWT Authentication
  - CORS Handler
  - Multer File Upload
  
  **Tech:** Node.js, Express.js
end note

note bottom of mongodb
  **Database**
  Port: 27017 (internal)
  Port: 27018 (external)
  
  **Collections:**
  users, foods, orders
  
  **Storage:** Docker Volume
end note

note left of stripe
  **External Service**
  
  Payment Gateway
  Webhook Support
end note

@enduml
