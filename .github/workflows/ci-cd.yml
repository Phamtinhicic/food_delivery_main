name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [backend, frontend, admin, restaurant]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: ${{ matrix.service }}/package-lock.json

      - name: Install dependencies
        working-directory: ${{ matrix.service }}
        run: npm install

      - name: Check for syntax errors
        working-directory: ${{ matrix.service }}
        run: |
          echo "Checking ${{ matrix.service }} for basic issues..."
          if [ -f package.json ]; then
            echo "âœ“ package.json exists"
            node -v
            npm -v
          fi

      - name: Build (if build script exists)
        working-directory: ${{ matrix.service }}
        run: |
          if npm run | grep -q "build"; then
            echo "Running build for ${{ matrix.service }}..."
            npm run build
          else
            echo "No build script found, skipping..."
          fi
        continue-on-error: true

  # Note: pushing to registry requires secrets (DOCKERHUB_USERNAME / DOCKERHUB_TOKEN or other registry)
  publish:
    runs-on: ubuntu-latest
    needs: build
    if: false # disabled by default; enable and set secrets to push images
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push images
        run: |
          docker build -t myrepo/backend:latest backend
          docker push myrepo/backend:latest
