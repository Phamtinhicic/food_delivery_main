name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [backend, frontend, admin, restaurant]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ${{ matrix.service }}/node_modules
          key: ${{ runner.os }}-node-${{ matrix.service }}-${{ hashFiles(format('{0}/package-lock.json', matrix.service)) }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.service }}-

      - name: Install dependencies
        working-directory: ${{ matrix.service }}
        run: |
          if [ -f package-lock.json ]; then
            npm ci --prefer-offline --no-audit
          else
            npm install --prefer-offline --no-audit
          fi

      - name: Check for syntax errors
        working-directory: ${{ matrix.service }}
        run: |
          echo "Checking ${{ matrix.service }} for basic issues..."
          if [ -f package.json ]; then
            echo "âœ“ package.json exists"
            node -v
            npm -v
          fi

      - name: Build (if build script exists)
        working-directory: ${{ matrix.service }}
        run: |
          if npm run | grep -q "build"; then
            echo "Running build for ${{ matrix.service }}..."
            npm run build
          else
            echo "No build script found, skipping..."
          fi
        continue-on-error: true

  # Docker Build and Push to DockerHub
  publish:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' # Enable Docker push
    strategy:
      matrix:
        service: [backend, frontend, admin, restaurant]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          file: ./${{ matrix.service }}/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/food-delivery-${{ matrix.service }}:latest
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/food-delivery-${{ matrix.service }}:latest
          cache-to: type=inline
