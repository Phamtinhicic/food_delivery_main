name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [backend, frontend, admin, restaurant]
    defaults:
      run:
        working-directory: ${{ matrix.service }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run lint (if exists)
        run: |
          if [ -f package.json ]; then
            if npm run | grep -q "lint"; then
              npm run lint || true
            fi
          fi

      - name: Run tests (if exists)
        run: |
          if [ -f package.json ]; then
            if npm run | grep -q "test"; then
              npm test || true
            fi
          fi

      - name: Build
        run: |
          if [ -f package.json ]; then
            if npm run | grep -q "build"; then
              npm run build || true
            fi
          fi

      - name: Build Docker image (local)
        if: steps.check.outputs.skip != 'true'
        run: |
          IMAGE_NAME=${{ github.repository }}-${{ matrix.service }}:${{ github.sha }}
          docker build -t ${IMAGE_NAME} .

  # Note: pushing to registry requires secrets (DOCKERHUB_USERNAME / DOCKERHUB_TOKEN or other registry)
  publish:
    runs-on: ubuntu-latest
    needs: build
    if: false # disabled by default; enable and set secrets to push images
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push images
        run: |
          docker build -t myrepo/backend:latest backend
          docker push myrepo/backend:latest
